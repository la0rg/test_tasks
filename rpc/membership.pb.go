// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/membership.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Membership struct {
	Endpoints   []*Endpoint          `protobuf:"bytes,1,rep,name=endpoints" json:"endpoints,omitempty"`
	Vnodes      map[string]*Endpoint `protobuf:"bytes,2,rep,name=vnodes" json:"vnodes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	VectorClock *VC                  `protobuf:"bytes,3,opt,name=vector_clock,json=vectorClock" json:"vector_clock,omitempty"`
}

func (m *Membership) Reset()                    { *m = Membership{} }
func (m *Membership) String() string            { return proto.CompactTextString(m) }
func (*Membership) ProtoMessage()               {}
func (*Membership) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Membership) GetEndpoints() []*Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *Membership) GetVnodes() map[string]*Endpoint {
	if m != nil {
		return m.Vnodes
	}
	return nil
}

func (m *Membership) GetVectorClock() *VC {
	if m != nil {
		return m.VectorClock
	}
	return nil
}

type Endpoint struct {
	Ip    []byte `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port  int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	Iport int32  `protobuf:"varint,3,opt,name=iport" json:"iport,omitempty"`
}

func (m *Endpoint) Reset()                    { *m = Endpoint{} }
func (m *Endpoint) String() string            { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()               {}
func (*Endpoint) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Endpoint) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Endpoint) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Endpoint) GetIport() int32 {
	if m != nil {
		return m.Iport
	}
	return 0
}

func init() {
	proto.RegisterType((*Membership)(nil), "rpc.Membership")
	proto.RegisterType((*Endpoint)(nil), "rpc.Endpoint")
}

func init() { proto.RegisterFile("rpc/membership.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x49, 0x62, 0xab, 0x9d, 0xad, 0x22, 0x43, 0x91, 0x50, 0x2f, 0x4b, 0xbd, 0x2c, 0x0a,
	0x2b, 0xb4, 0x17, 0xf1, 0x5a, 0x0b, 0x5e, 0xbc, 0xe4, 0xd0, 0xab, 0xd8, 0x34, 0x60, 0x68, 0xbb,
	0x19, 0xb2, 0x71, 0xa1, 0xef, 0xeb, 0x83, 0xc8, 0xce, 0x56, 0x5b, 0xbc, 0x4d, 0xfe, 0xef, 0x9f,
	0x8f, 0x21, 0x30, 0x8a, 0x64, 0x1f, 0x77, 0x6e, 0xb7, 0x72, 0xb1, 0xfe, 0xf4, 0x54, 0x52, 0x0c,
	0x29, 0xa0, 0x8a, 0x64, 0xc7, 0x37, 0x2d, 0x6a, 0x9c, 0x4d, 0x21, 0xbe, 0xdb, 0x6d, 0xb0, 0x9b,
	0x0e, 0x4e, 0xbe, 0x05, 0xc0, 0xdb, 0xdf, 0x06, 0x3e, 0xc0, 0xc0, 0x55, 0x6b, 0x0a, 0xbe, 0x4a,
	0xb5, 0x16, 0xb9, 0x2a, 0xb2, 0xe9, 0x65, 0x19, 0xc9, 0x96, 0x8b, 0x43, 0x6a, 0x8e, 0x1c, 0x67,
	0xd0, 0x6f, 0xaa, 0xb0, 0x76, 0xb5, 0x96, 0xdc, 0xbc, 0xe5, 0xe6, 0xd1, 0x56, 0x2e, 0x99, 0x2e,
	0xaa, 0x14, 0xf7, 0xe6, 0x50, 0xc5, 0x7b, 0x18, 0x9e, 0x9e, 0xa1, 0x55, 0x2e, 0x8a, 0x6c, 0x7a,
	0xce, 0xab, 0xcb, 0xb9, 0xc9, 0x3a, 0x38, 0x6f, 0xd9, 0xf8, 0x15, 0xb2, 0x13, 0x05, 0x5e, 0x83,
	0xda, 0xb8, 0xbd, 0x16, 0xb9, 0x28, 0x06, 0xa6, 0x1d, 0xf1, 0x0e, 0x7a, 0xcd, 0xc7, 0xf6, 0xcb,
	0x69, 0xc9, 0x96, 0x7f, 0xa7, 0x76, 0xec, 0x59, 0x3e, 0x89, 0xc9, 0x0b, 0x5c, 0xfc, 0xc6, 0x78,
	0x05, 0xd2, 0x13, 0x5b, 0x86, 0x46, 0x7a, 0x42, 0x84, 0x33, 0x0a, 0x31, 0xb1, 0xa3, 0x67, 0x78,
	0xc6, 0x11, 0xf4, 0x3c, 0x87, 0x8a, 0xc3, 0xee, 0xb1, 0xea, 0xf3, 0x9f, 0xcd, 0x7e, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x73, 0x73, 0xc0, 0xf6, 0x68, 0x01, 0x00, 0x00,
}
